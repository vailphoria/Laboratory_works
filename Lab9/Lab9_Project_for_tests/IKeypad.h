/**************************************************************************
* Всё, что написано в комментариях - это предполагаемое поведение, легенда.
* Нужно, чтобы вы лучше представляли с чем работаете.
* Ничего реализовывать не нужно. Данный класс нужно mock-ать.
***************************************************************************/
#ifndef IKEYPAD_H
#define IKEYPAD_H
#include <string>

struct PasswordResponse{
    enum class Status{
        OK,      // Пароль успешно введён
        TIMEOUT  // Время вышло, пользователь не успел ввести пароль или просто передумал
    };
    Status status;
    std::string password;
};

/**
 * @brief The IKeypad class
 *
 * Интерфейсный класс управления клавиатурой. Реализация класса зависит от конкретной железки,
 * которая будет идти в комплекте с замком. Может быть несколько разных вариантов клавиатур и,
 * соответственно, несколько разных классов управляющих ими. Поэтому реализация нам не известна.
 * Но в любом случае, эти конкретные классы будут наследниками IKeypad и должны будут
 * реализовать все абстрактные методы.
 */
class IKeypad{
public:
    IKeypad()                                  = default;
    virtual ~IKeypad()                         = default;
    // Проверяет впорядке ли клавиатура (может быть она сломана)
    virtual bool isActive()                    = 0;
    // Ждём, и выходим из метода только тогда, когда пользователь прикоснётся к клавиатуре
    virtual void wait()                        = 0;
    // Взаимодействует с пользователем с целью получить пароль. Результат зависит от действий пользователя
    virtual PasswordResponse requestPassword() = 0;
};

#endif // IKEYPAD_H
